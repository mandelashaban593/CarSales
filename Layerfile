#This is an example LayerCI configuration for Django!
FROM vm/ubuntu:18.04

# To note: Layerfiles create entire VMs, *not* containers!

# Install python 3 & postgresql
RUN apt-get update && \
    apt-get install python3-pip python3-dev libpq-dev \
            postgresql postgresql-contrib nginx curl

# Install django & postgresql python driver

# Install django & postgresql python driver
RUN pip3 install  Django==3.1.6 africastalking==1.2.0 celery==5.0.5 django-ckeditor==6.0.0 django-classy-tags==2.0.0 django-crispy-forms==1.9.2 django-dbbackup==3.3.0 django-forms-bootstrap==3.1.0 django-gdrive-backup==0.0.1 django-js-asset==1.2.2 django-markdownx==3.0.1 django-sslserver==0.22 django-taggit==1.3.0 django-taggit-templatetags2==1.6.1 django-tawkto==0.2 django-utils-six==2.0 django-widget-tweaks==1.4.8 djangorestframework==3.11.0 encrypted-credentials==0.0.2 google-api-core==1.25.1 google-api-python-client==1.12.8 google-auth==1.24.0 google-auth-httplib2==0.0.4 google-client-helper==0.0.3 googleapis-common-protos==1.52.0 httplib2==0.18.1 idna==2.10 importlib-metadata==2.0.0 kombu==5.0.2 lxml==4.6.2 Markdown==3.3.3 Pillow==8.1.0 places==0.3.4 prompt-toolkit==3.0.14 protobuf==3.14.0 psycopg2-binary==2.8.6 pyasn1==0.4.8 pyasn1-modules==0.2.8 pycparser==2.20 pytz==2020.4 requests==2.25.0 rsa==4.7 schema==0.7.3 six==1.15.0 sqlparse==0.4.1 uritemplate==3.0.1 urllib3==1.26.2 vine==5.0.0 wcwidth==0.2.5 xmltodict==0.12.0 zipp==3.4.0 djangoflutterwave==0.3.0


# Set up database
RUN sudo -u postgres -H -- psql -t -c "CREATE DATABASE mydb;"
RUN sudo -u postgres -H -- psql -t -c "\
    CREATE USER myuser WITH PASSWORD 'password'; \
    ALTER ROLE myuser SET client_encoding TO 'utf8'; \
    ALTER ROLE myuser SET default_transaction_isolation TO 'read committed'; \
    ALTER ROLE myuser SET timezone TO 'UTC'; \
    GRANT ALL PRIVILEGES ON DATABASE mydb TO myuser;"

# Copy project files
COPY . .

# Tell Django how to talk to the database
RUN echo 'DATABASES={"default": {\
    "ENGINE": "django.db.backends.postgresql_psycopg2", \
    "NAME": "mydb", \
    "USER": "myuser", \
    "PASSWORD": "password", \
    "HOST": "localhost", \
    "PORT": ""}}' >> settings.py

# Allow local connections to the site
RUN echo "ALLOWED_HOSTS = ['localhost']" >> settings.py

# Run migrations (implicitly checks that they work)
RUN python3 manage.py makemigrations && python3 manage.py migrate

# Start the server
RUN BACKGROUND python3 manage.py runserver 0.0.0.0:8000
EXPOSE WEBSITE localhost:8000
